/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as RulesIndexImport } from './routes/rules/index'
import { Route as ProfileIndexImport } from './routes/profile/index'
import { Route as ExchangeIndexImport } from './routes/exchange/index'
import { Route as ContactsIndexImport } from './routes/contacts/index'
import { Route as BlogIndexImport } from './routes/blog/index'
import { Route as AmlIndexImport } from './routes/aml/index'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLogoutImport } from './routes/(auth)/logout'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as AdminUsersIndexImport } from './routes/admin/users/index'
import { Route as AdminDashboardIndexImport } from './routes/admin/dashboard/index'
import { Route as AdminCurrenciesIndexImport } from './routes/admin/currencies/index'

// Create/Update Routes

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RulesIndexRoute = RulesIndexImport.update({
  id: '/rules/',
  path: '/rules/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIndexRoute = ProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const ExchangeIndexRoute = ExchangeIndexImport.update({
  id: '/exchange/',
  path: '/exchange/',
  getParentRoute: () => rootRoute,
} as any)

const ContactsIndexRoute = ContactsIndexImport.update({
  id: '/contacts/',
  path: '/contacts/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const AmlIndexRoute = AmlIndexImport.update({
  id: '/aml/',
  path: '/aml/',
  getParentRoute: () => rootRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const authLogoutRoute = authLogoutImport.update({
  id: '/(auth)/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminDashboardIndexRoute = AdminDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminCurrenciesIndexRoute = AdminCurrenciesIndexImport.update({
  id: '/currencies/',
  path: '/currencies/',
  getParentRoute: () => AdminRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/logout': {
      id: '/(auth)/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof authLogoutImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof rootRoute
    }
    '/aml/': {
      id: '/aml/'
      path: '/aml'
      fullPath: '/aml'
      preLoaderRoute: typeof AmlIndexImport
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
    '/contacts/': {
      id: '/contacts/'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof ContactsIndexImport
      parentRoute: typeof rootRoute
    }
    '/exchange/': {
      id: '/exchange/'
      path: '/exchange'
      fullPath: '/exchange'
      preLoaderRoute: typeof ExchangeIndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/rules/': {
      id: '/rules/'
      path: '/rules'
      fullPath: '/rules'
      preLoaderRoute: typeof RulesIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/currencies/': {
      id: '/admin/currencies/'
      path: '/currencies'
      fullPath: '/admin/currencies'
      preLoaderRoute: typeof AdminCurrenciesIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/dashboard/': {
      id: '/admin/dashboard/'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof AdminRouteImport
    }
  }
}

// Create and export the route tree

interface AdminRouteRouteChildren {
  AdminCurrenciesIndexRoute: typeof AdminCurrenciesIndexRoute
  AdminDashboardIndexRoute: typeof AdminDashboardIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminCurrenciesIndexRoute: AdminCurrenciesIndexRoute,
  AdminDashboardIndexRoute: AdminDashboardIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/logout': typeof authLogoutRoute
  '/register': typeof authRegisterRoute
  '/aml': typeof AmlIndexRoute
  '/blog': typeof BlogIndexRoute
  '/contacts': typeof ContactsIndexRoute
  '/exchange': typeof ExchangeIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/rules': typeof RulesIndexRoute
  '/admin/currencies': typeof AdminCurrenciesIndexRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/login': typeof authLoginRoute
  '/logout': typeof authLogoutRoute
  '/register': typeof authRegisterRoute
  '/aml': typeof AmlIndexRoute
  '/blog': typeof BlogIndexRoute
  '/contacts': typeof ContactsIndexRoute
  '/exchange': typeof ExchangeIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/rules': typeof RulesIndexRoute
  '/admin/currencies': typeof AdminCurrenciesIndexRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/logout': typeof authLogoutRoute
  '/(auth)/register': typeof authRegisterRoute
  '/aml/': typeof AmlIndexRoute
  '/blog/': typeof BlogIndexRoute
  '/contacts/': typeof ContactsIndexRoute
  '/exchange/': typeof ExchangeIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/rules/': typeof RulesIndexRoute
  '/admin/currencies/': typeof AdminCurrenciesIndexRoute
  '/admin/dashboard/': typeof AdminDashboardIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/login'
    | '/logout'
    | '/register'
    | '/aml'
    | '/blog'
    | '/contacts'
    | '/exchange'
    | '/profile'
    | '/rules'
    | '/admin/currencies'
    | '/admin/dashboard'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/login'
    | '/logout'
    | '/register'
    | '/aml'
    | '/blog'
    | '/contacts'
    | '/exchange'
    | '/profile'
    | '/rules'
    | '/admin/currencies'
    | '/admin/dashboard'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/(auth)/login'
    | '/(auth)/logout'
    | '/(auth)/register'
    | '/aml/'
    | '/blog/'
    | '/contacts/'
    | '/exchange/'
    | '/profile/'
    | '/rules/'
    | '/admin/currencies/'
    | '/admin/dashboard/'
    | '/admin/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authLogoutRoute: typeof authLogoutRoute
  authRegisterRoute: typeof authRegisterRoute
  AmlIndexRoute: typeof AmlIndexRoute
  BlogIndexRoute: typeof BlogIndexRoute
  ContactsIndexRoute: typeof ContactsIndexRoute
  ExchangeIndexRoute: typeof ExchangeIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  RulesIndexRoute: typeof RulesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authLogoutRoute: authLogoutRoute,
  authRegisterRoute: authRegisterRoute,
  AmlIndexRoute: AmlIndexRoute,
  BlogIndexRoute: BlogIndexRoute,
  ContactsIndexRoute: ContactsIndexRoute,
  ExchangeIndexRoute: ExchangeIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  RulesIndexRoute: RulesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/(auth)/login",
        "/(auth)/logout",
        "/(auth)/register",
        "/aml/",
        "/blog/",
        "/contacts/",
        "/exchange/",
        "/profile/",
        "/rules/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/currencies/",
        "/admin/dashboard/",
        "/admin/users/"
      ]
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(auth)/logout": {
      "filePath": "(auth)/logout.tsx"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx"
    },
    "/aml/": {
      "filePath": "aml/index.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    },
    "/contacts/": {
      "filePath": "contacts/index.tsx"
    },
    "/exchange/": {
      "filePath": "exchange/index.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.tsx"
    },
    "/rules/": {
      "filePath": "rules/index.tsx"
    },
    "/admin/currencies/": {
      "filePath": "admin/currencies/index.tsx",
      "parent": "/admin"
    },
    "/admin/dashboard/": {
      "filePath": "admin/dashboard/index.tsx",
      "parent": "/admin"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx",
      "parent": "/admin"
    }
  }
}
ROUTE_MANIFEST_END */
